{"version":3,"sources":["ListItem/ListItem.module.css","Filter/Filter.module.css","ContactList/ContactList.module.css","ThemeContext/ThemeContext.jsx","redux/phonebook/phonebookActions.js","ContactForm/ContactForm.jsx","ListItem/ListItem.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","hoc/withTheme.js","redux/phonebook/phonebookReducer.js","redux/store.js","index.js","ContactForm/ContactForm.module.css"],"names":["module","exports","themeConfig","light","fontColor","bodybg","changeTo","dark","ThemeContext","React","createContext","uuidv1","require","addContact","createAction","name","number","payload","contact","id","removeContact","changeFilter","ContactForm","state","handleChange","e","target","value","setState","onSubmit","preventDefault","props","bind","this","className","styles","form","type","input","onChange","required","button","Component","mapDispatchToProps","phonebookActions","connect","ListItem","onRemove","listItem","key","onClick","contacts","filter","toLowerCase","includes","contactList","map","onChangeFilter","container","htmlFor","App","toggleTheme","Consumer","theme","style","background","color","checked","event","currentTarget","Theme","newTheme","Provider","createReducer","action","store","configureStore","reducer","tasksReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69904a0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__2KRmq\",\"button\":\"ListItem_button__3eHig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__VE-pk\",\"input\":\"Filter_input__QAhIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3TRpB\"};","import React from 'react';\n\nexport const themeConfig = {\n    light: {\n        fontColor: 'black',\n        bodybg: 'white',\n        changeTo: 'dark',\n    },\n    dark: {\n        fontColor: 'white',\n        bodybg: 'black',\n        changeTo: 'light',\n    }\n};\n\nconst ThemeContext = React.createContext(themeConfig.light);\nexport default ThemeContext;","import { createAction } from '@reduxjs/toolkit';\n\nconst uuidv1 = require('uuid/v1');\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    contact: {\n      name,\n      number,\n      id: uuidv1(),\n    },\n  },\n}));\n\nconst removeContact = createAction('contacts/remove');\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n  addContact,\n  removeContact,\n  changeFilter,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../redux/phonebook/phonebookActions.js'\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    }\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (e) => {\n        const { name, number } = this.state;\n        e.preventDefault();\n        this.props.onSubmit(name, number);\n        this.setState({ name: '', number: '' });\n    }\n\n    handleChange = this.handleChange.bind(this);\n\n    render() {\n        const { name, number } = this.state;\n        return <form id=\"form\" className={styles.form} onSubmit={this.onSubmit}>\n            <label> Name\n                <input type=\"text\" name=\"name\" value={name} className={styles.input} onChange={this.handleChange} required />\n            </label>\n            <label> Number\n                <input type=\"tel\" name=\"number\" value={number} className={styles.input} onChange={this.handleChange} required />\n            </label>\n            <button form=\"form\" type=\"submit\" className={styles.button} >Add contact</button>\n        </form>\n    };\n};\n\nconst mapDispatchToProps = {\n    onSubmit: phonebookActions.addContact\n}\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ListItem.module.css';\n\nexport default function ListItem({ id, name, number, onRemove }) {\n    return (\n        <li className={styles.listItem} key={id}>\n            {name} : {number}\n            <button type=\"button\" className={styles.button} onClick={() => onRemove(id)}>Delete</button>\n        </li>\n    )\n};\n\n\nListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../redux/phonebook/phonebookActions.js';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport ListItem from '../ListItem/ListItem';\n\nfunction ContactList({ contacts, onRemove }) {\n    return (\n        <ul className={styles.contactList} >\n            {contacts.map(contact => (\n                <ListItem key={contact.id} id={contact.id} name={contact.name} number={contact.number} onRemove={onRemove} />\n            ))\n            }\n        </ul>\n    )\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n    const { contacts, filter } = state;\n    const visibleContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n    return {\n        contacts: visibleContacts\n    }\n};\n\nconst mapDispatchToProps = {\n    onRemove: phonebookActions.removeContact\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../redux/phonebook/phonebookActions.js';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport uuidv1 from 'uuid/v1';\n\nconst Filter = ({ value, onChangeFilter }) => (\n    <div className={styles.container}>\n        <label htmlFor=\"filter\">Find contacts by name</label>\n        <input\n            id={uuidv1()}\n            type=\"text\"\n            name=\"filter\"\n            value={value}\n            className={styles.input}\n            onChange={e => onChangeFilter(e.target.value)}\n        />\n    </div>\n);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: state.filter,\n});\n\nconst mapDispatchToProps = {\n    onChangeFilter: phonebookActions.changeFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter); ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport ThemeContext from './ThemeContext/ThemeContext';\n\nexport default function App({ toggleTheme }) {\n  return (\n    <ThemeContext.Consumer>\n      {theme => (\n        <div\n          className=\"body\"\n          style={{ background: theme.bodybg, color: theme.fontColor }}\n        >\n          <div className=\"theme-selector\">\n            <label htmlFor=\"theme\" className=\"switch\">\n              <input\n                type=\"checkbox\"\n                id=\"theme\"\n                checked={theme.type === 'light'}\n                onChange={event => toggleTheme(event.currentTarget.value)}\n              />\n              <span className=\"slider round\">\n                Change to {theme.changeTo} theme\n              </span>\n            </label>\n          </div>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\nApp.propTypes = {\n  toggleTheme: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport ThemeContext, { themeConfig } from '../ThemeContext/ThemeContext';\nimport App from '../App';\n\nclass Theme extends Component {\n  constructor() {\n    super();\n    this.state = {\n      theme: 'light',\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme(newTheme) {\n    const { theme } = this.state;\n    this.setState(() => {\n      return { theme: theme === 'dark' ? 'light' : 'dark' };\n    });\n  }\n\n  render() {\n    const { theme } = this.state;\n    return (\n      <ThemeContext.Provider value={themeConfig[theme]}>\n        <App toggleTheme={this.toggleTheme} />\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default Theme;\n","import { createReducer } from '@reduxjs/toolkit';\nimport phonebookActions from './phonebookActions';\n\nconst addContact = (state, action) => [...state, action.payload.contact];\nconst removeContact = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\n\nconst contacts = createReducer([], {\n  [phonebookActions.addContact]: addContact,\n  [phonebookActions.removeContact]: removeContact,\n});\n\nconst filter = createReducer('', {\n  [phonebookActions.changeFilter]: (state, action) => action.payload,\n});\n\nexport default {\n  contacts,\n  filter,\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport tasksReducer from './phonebook/phonebookReducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: tasksReducer.contacts,\n    filter: tasksReducer.filter,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Theme from './hoc/withTheme';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Theme />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__30sDI\",\"input\":\"ContactForm_input__21VKQ\",\"button\":\"ContactForm_button__15jbv\"};"],"sourceRoot":""}